apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    environment: test
  name: nginx
spec:
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      environment: test
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        environment: test
    spec:
      initContainers:
      - name:           init
        image:          busybox
        command:       ['sh', '-c', 'echo Running >> /timing && sleep 10']
      containers:
      - image: nginx:1.17
        name: nginx
        ports:
        - name: nginx-port
          containerPort: 8081
        env:
          - name: SECRET_USERNAME
            valueFrom:
              secretKeyRef:
                key: username
                name: db-secrets
          - name: SECRET_PASSWORD
            valueFrom:
              secretKeyRef:
                  key: password
                  name: db-secrets
        livenessProbe:
          httpGet:
              port: 8081
              path: /alive
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /health
            port: 8081
          initialDelaySeconds: 10
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  ports:
  - port: 80
    targetPort: nginx-port
    protocol: TCP
  selector:
    app: nginx
  type: LoadBalancer